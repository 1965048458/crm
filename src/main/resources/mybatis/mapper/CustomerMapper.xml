<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuebei.crm.customer.CustomerMapper">

    <resultMap id="deptMap" type="com.xuebei.crm.customer.Department">
        <id property="deptId" column="customer_dept_id"/>
        <result property="deptName" column="department_nm"/>
        <result property="profile" column="profile"/>
        <result property="website" column="website"/>
        <result property="enclosureStatus" column="enclosure_status"/>
        <association property="customer" javaType="com.xuebei.crm.customer.Customer">
            <id property="customerId" column="customer_id"/>
        </association>
        <association property="parent" javaType="com.xuebei.crm.customer.Department">
            <id property="deptId" column="prt_id"/>
        </association>
    </resultMap>

    <resultMap id="enclosureApplyMap" type="com.xuebei.crm.customer.EnclosureApply">
        <id property="enclosureApplyId" column="enclosure_apply_id"/>
        <result property="userId" column="user_id"/>
        <result property="statusCd" column="status_cd"/>
        <result property="startTime" column="apply_start_ts"/>
        <result property="endTime" column="apply_end_ts"/>
        <result property="deptId" column="customer_dept_id"/>
    </resultMap>

    <resultMap id="contactsTypeMap" type="com.xuebei.crm.customer.ContactsType">
        <id property="contactsTypeId" column="contacts_type_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="typeName" column="type_name"/>
    </resultMap>

    <resultMap id="customerMap" type="com.xuebei.crm.customer.Customer">
        <id property="customerId" column="customer_id"/>
        <result property="customerName" column="customer_nm"/>
        <result property="customerType" column="type_cd"/>
        <result property="profile" column="profile"/>
        <result property="website" column="website"/>
    </resultMap>

    <resultMap id="contactsMap" type="com.xuebei.crm.customer.Contacts">
        <id property="contactsId" column="contacts_id"/>
        <result property="departmentId" column="customer_dept_id"/>
        <result property="realName" column="real_nm"/>
        <result property="gender" column="gender"/>
        <result property="typeName" column="type_name"/>
        <result property="customerName" column="customer_nm"/>
        <result property="customerId" column="customer_id"/>
    </resultMap>

    <resultMap id="contactsDetailMap" type="com.xuebei.crm.customer.Contacts">
        <id property="contactsId" column="contacts_id"/>
        <result property="departmentId" column="customer_dept_id"/>
        <result property="realName" column="real_nm"/>
        <result property="gender" column="gender"/>
        <result property="phone" column="phone"/>
        <result property="wechat" column="wechat"/>
        <result property="tel" column="tel"/>
        <result property="QQ" column="QQ"/>
        <result property="email" column="email"/>
        <result property="officeAddr" column="office_address"/>
        <result property="profile" column="profile"/>
        <result property="specialRelationship" column="special_relationship"/>
        <association property="contactsType" javaType="com.xuebei.crm.customer.ContactsType">
            <id property="contactsTypeId" column="contacts_type_id"/>
            <result property="typeName" column="type_name"/>
        </association>
    </resultMap>

    <resultMap id="visitMap" type="com.xuebei.crm.customer.Visit">
        <id property="visitId" column="visit_log_id"/>
        <result property="userId" column="user_id"/>
        <result property="visitTime" column="create_ts"/>
        <result property="visitDept" column="des_id"/>
    </resultMap>

    <resultMap id="followUpRecordMap" type="com.xuebei.crm.customer.FollowUpRecord">
        <result property="followUpTime" column="create_ts"/>
        <result property="followUpPersonRealName" column="real_nm"/>
        <result property="visitLogId" column="visit_log_id"/>
        <result property="followUpType" column="visit_type"/>
        <result property="followUpResult" column="visit_result"/>
    </resultMap>

    <resultMap id="contactsDeptMap" type="com.xuebei.crm.customer.ContactsDept">
        <id property="contactsId" column="contacts_id"/>
        <result property="customerName" column="customer_nm"/>
        <result property="deptName" column="department_nm"/>
        <result property="prtDeptName" column="prt_dept_nm"/>
        <result property="realName" column="real_nm"/>
    </resultMap>

    <resultMap id="opportunityDetailMap" type="com.xuebei.crm.customer.Contacts">
        <id property="contactsId" column="contacts_id"/>
        <result property="departmentId" column="customer_dept_id"/>
        <result property="realName" column="real_nm"/>
        <result property="gender" column="gender"/>
        <result property="typeName" column="type_name"/>
        <result property="departmentName" column="department_nm"/>
        <result property="customerName" column="customer_nm"/>
        <result property="customerId" column="customer_id"/>
    </resultMap>

    <select id="isUserHasCustomer" resultType="java.lang.Boolean">
        SELECT COUNT(company_customer.customer_id)
        FROM company_user
            INNER JOIN company_customer ON company_user.company_id = company_customer.company_id
        WHERE company_user.user_id = #{userId} AND company_customer.customer_id = #{customerId};
    </select>

    <select id="isSubDepartNameExist" resultType="java.lang.Boolean">
        SELECT COUNT(customer_dept_id)
        FROM customer_dept
        WHERE prt_id = #{prtId}
        AND department_nm = #{departmentName};
    </select>

    <select id="isTopDepartNameExist" resultType="java.lang.Boolean">
        SELECT COUNT(customer_dept_id)
        FROM customer_dept
        WHERE customer_id = #{customerId}
        AND department_nm = #{departmentName};
    </select>
    
    <select id="searchDeptByName" resultMap="deptMap">
        select *
        from customer_dept
        WHERE  customer_id=#{customerId}
        AND department_nm=#{departmentName};
    </select>
    
    <update id="updateDept">
        UPDATE customer_dept
        set website=#{website},
            profile=#{profile}
        WHERE customer_dept_id=#{deptId};

    </update>

    <insert id="insertDepartment" parameterType="com.xuebei.crm.customer.Department">
        INSERT INTO customer_dept (
            customer_dept_id,
            prt_id,
            department_nm,
            customer_id,
            enclosure_status,
            website,
            PROFILE
        )
        VALUES
            (
                #{deptId},
                #{parent.deptId},
                #{deptName},
                #{customer.customerId},
                #{enclosureStatus},
                #{website},
                #{profile}
            );
    </insert>

    <insert id="newSchool" parameterType="java.lang.String">
        INSERT INTO crm_customer (
            customer_id,
            customer_nm,
            type_cd,
            profile,
            website,
            creator_id,
            create_ts,
            updater_id,
            update_ts
        )
        VALUES
            (
                #{customer_id},
                #{name},
                #{schoolType},
                #{profile},
                #{website},
                #{creator_id},
                NOW(),
                #{updater_id},
                NOW()
            );
    </insert>

    <select id="queryCustomerInfo" resultMap="customerMap">
        select * from crm_customer
        where creator_id = #{userId} AND
              customer_nm LIKE CONCAT('%', #{searchWord}, '%')
              OR customer_id in ( select cd.customer_id from customer_dept cd
            INNER join enclosure_apply e on e.customer_dept_id = cd.customer_dept_id
        where e.user_id = #{userId} and e.status_cd = 'PERMITTED');
    </select>

    <select id="queryCustomer" resultMap="customerMap">
        SELECT *
        FROM crm_customer
        WHERE customer_id = #{customerId};
    </select>

    <select id="getMyCustomers" resultMap="customerMap">
        select distinct cc.* from crm_customer cc
            INNER join customer_dept cd on cd.customer_id = cc.customer_id
            INNER join enclosure_apply e on e.customer_dept_id = cd.customer_dept_id
        where e.user_id = #{userId} and e.status_cd = 'PERMITTED';
    </select>

    <select id="getCommonCustomers" resultMap="customerMap">
        select distinct cc.* from crm_customer cc
        where cc.creator_id = #{userId}
              and cc.customer_id not in ( select cd.customer_id from customer_dept cd
            INNER join enclosure_apply e on e.customer_dept_id = cd.customer_dept_id
        where e.user_id = #{userId}  and e.status_cd = 'PERMITTED');
    </select>

    <select id="queryDepartmentById" resultMap="deptMap">
        SELECT *
        FROM customer_dept
        WHERE customer_dept_id = #{deptId};
    </select>

    <select id="lastFollowTs" resultType="java.lang.String">
        SELECT DATE_FORMAT(max(j.create_ts), '%Y%m%d')
        FROM crm_customer cc
            INNER JOIN contacts_type ct ON cc.customer_id = ct.customer_id
            INNER JOIN contacts cs ON cs.contacts_type_id = ct.contacts_type_id
            INNER JOIN visit_contacts vc ON vc.contacts_id = cs.contacts_id
            INNER JOIN visit_log vl ON vl.visit_log_id = vc.visit_log_id
            INNER JOIN journal j ON vl.journal_id = j.journal_id
        WHERE cc.customer_id = #{customerId}
    </select>

    <insert id="insertContacts" parameterType="com.xuebei.crm.customer.Contacts">
        INSERT INTO `contacts` (
            `contacts_id`,
            `customer_dept_id`,
            `real_nm`,
            `gender`,
            `phone`,
            `wechat`,
            `tel`,
            `QQ`,
            `email`,
            `office_address`,
            `profile`,
            `special_relationship`,
            `contacts_type_id`
        )
        VALUES
            (
                #{contactsId},
                #{department.deptId},
                #{realName},
                #{gender},
                #{phone},
                #{wechat},
                #{tel},
                #{QQ},
                #{email},
                #{officeAddr},
                #{profile},
                #{specialRelationship},
                #{contactsType.contactsTypeId}
            );
    </insert>

    <select id="queryContactsTypeById" resultMap="contactsTypeMap">
        SELECT *
        FROM contacts_type
        WHERE contacts_type_id = #{contactsTypeId};
    </select>

    <select id="queryDepartment" resultMap="deptMap">
        SELECT cd.*
        FROM customer_dept cd
            LEFT JOIN contacts c ON c.customer_dept_id = cd.customer_dept_id
        WHERE cd.customer_id = #{customerId}
    </select>

    <select id="queryContacts" resultMap="contactsMap">
        SELECT
            c.*,
            ct.type_name,
            cu.customer_nm,
            cu.customer_id
        FROM contacts c
            LEFT JOIN customer_dept cd ON c.customer_dept_id = cd.customer_dept_id
            LEFT JOIN contacts_type ct ON ct.contacts_type_id = c.contacts_type_id
            LEFT JOIN crm_customer cu ON cd.customer_id = cu.customer_id
        WHERE cd.customer_id = #{customerId}
    </select>

    <update id="updateEnclosureApply" >
        UPDATE enclosure_apply
        SET apply_ts=NOW(),
            customer_dept_id=#{deptId},
            user_id= #{userId},
            apply_reason= '机构编辑申请',
            apply_start_ts=NOW(),
            apply_end_ts=date_add(NOW(), INTERVAL 3 MONTH),
            status_cd= 'APPLYING',
            updater_id=#{userId},
            update_ts= NOW()
        WHERE customer_dept_id=#{deptId}
    </update>

    <insert id="insertEnclosureApply" parameterType="com.xuebei.crm.customer.EnclosureApply">
        INSERT INTO enclosure_apply (
            apply_ts,
            customer_dept_id,
            user_id,
            apply_reason,
            apply_start_ts,
            apply_end_ts,
            status_cd,
            updater_id,
            update_ts
        )
        VALUES (
            NOW(),
            #{deptId},
            #{userId},
            #{reasons},
            NOW(),
            date_add(NOW(), INTERVAL 3 MONTH),
            'APPLYING',
            #{userId},
            NOW()
        );

    </insert>

    <select id="queryEnclosureApply" resultMap="enclosureApplyMap">
        SELECT
            ea.user_id,
            ea.status_cd
        FROM enclosure_apply ea
        WHERE ea.customer_dept_id = #{deptId}
    </select>

    <select id="queryNewEnclosureApply" resultMap="enclosureApplyMap">
        SELECT *
        FROM enclosure_apply AS t
        WHERE t.customer_dept_id = #{deptId} AND t.status_cd = 'PERMITTED'
        ORDER BY t.apply_start_ts DESC
        LIMIT 1;
    </select>

    <select id="queryMyVisit" resultMap="visitMap">
        SELECT
            r1.create_ts,
            r1.user_id,
            r2.des_id,
            r1.visit_log_id
        FROM
            (
                SELECT
                    A.contacts_id,
                    B.create_ts,
                    B.user_id,
                    A.visit_log_id
                FROM
                    (SELECT
                         visit_contacts.contacts_id,
                         visit_log.journal_id,
                         visit_log.visit_log_id
                     FROM visit_contacts
                         LEFT JOIN visit_log ON
                                                 visit_contacts.visit_log_id = visit_log.visit_log_id)
                        AS A LEFT JOIN journal AS B ON A.journal_id = B.journal_id
            ) AS r1
            LEFT JOIN
            (
                SELECT
                    contacts.contacts_id,
                    dept_dest_table.des_id
                FROM contacts
                    LEFT JOIN
                    ((SELECT
                          customer_dept_id,
                          prt_id AS des_id
                      FROM customer_dept
                      WHERE prt_id IS NOT NULL)
                     UNION
                     (SELECT
                          customer_dept_id,
                          customer_dept_id AS des_id
                      FROM customer_dept
                      WHERE prt_id IS NULL))

                        AS dept_dest_table
                        ON contacts.customer_dept_id = dept_dest_table.customer_dept_id
            ) AS r2 ON r1.contacts_id = r2.contacts_id
        WHERE r2.des_id = #{deptId}
              AND r1.create_ts &gt;= #{startTime}
              AND r1.user_id = #{userId}
        ORDER BY r1.create_ts DESC;
    </select>

    <select id="queryElseVisit" resultMap="visitMap">
        SELECT
            r1.create_ts,
            r1.user_id,
            r2.des_id,
            r1.visit_log_id
        FROM
            (
                SELECT
                    A.contacts_id,
                    B.create_ts,
                    B.user_id,
                    A.visit_log_id
                FROM
                    (SELECT
                         visit_contacts.contacts_id,
                         visit_log.journal_id,
                         visit_log.visit_log_id
                     FROM visit_contacts
                         LEFT JOIN visit_log ON
                                                 visit_contacts.visit_log_id = visit_log.visit_log_id)
                        AS A LEFT JOIN journal AS B ON A.journal_id = B.journal_id
            ) AS r1
            LEFT JOIN
            (
                SELECT
                    contacts.contacts_id,
                    dept_dest_table.des_id
                FROM contacts
                    LEFT JOIN
                    ((SELECT
                          customer_dept_id,
                          prt_id AS des_id
                      FROM customer_dept
                      WHERE prt_id IS NOT NULL)
                     UNION
                     (SELECT
                          customer_dept_id,
                          customer_dept_id AS des_id
                      FROM customer_dept
                      WHERE prt_id IS NULL))

                        AS dept_dest_table
                        ON contacts.customer_dept_id = dept_dest_table.customer_dept_id
            ) AS r2 ON r1.contacts_id = r2.contacts_id
        WHERE r2.des_id = #{deptId}
              AND r1.create_ts &gt;= #{startTime}
              AND r1.user_id != #{userId}
        ORDER BY r1.create_ts DESC
        LIMIT 1;
    </select>

    <update id="updateEnclosureApplyEndTs">
        UPDATE enclosure_apply AS ea
        SET ea.apply_end_ts = date_add(NOW(), INTERVAL 3 MONTH),
            ea.update_ts    = NOW(),
            ea.updater_id   = #{userId}
        WHERE ea.customer_dept_id = #{deptId}
              AND ea.status_cd = 'PERMITTED';
    </update>

    <insert id="insertEnclosureDelayApply" parameterType="com.xuebei.crm.customer.EnclosureApply">
        INSERT INTO enclosure_delay_apply (
            apply_ts, enclosure_apply_id, plan_end_ts, apply_reason, status_cd
        )
        VALUES (
            NOW(), #{enclosureApplyId}, date_add(NOW(), INTERVAL 3 MONTH), NULL, 'APPLYING'
        );
    </insert>

    <select id="searchSchool" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT c.customer_nm
        FROM crm_customer c
        WHERE c.customer_nm LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="queryContactsTypes" resultMap="contactsTypeMap">
        SELECT
            contacts_type_id,
            type_name
        FROM contacts_type
        WHERE customer_id = #{customerId};
    </select>

    <select id="queryContactsDept" resultMap="contactsDeptMap">
        SELECT
            ta.contacts_id,
            ta.real_nm,
            tb.*
        FROM contacts AS ta LEFT JOIN
            (SELECT
                 A.customer_dept_id,
                 A.department_nm,
                 B.customer_dept_id AS prt_dept_id,
                 B.department_nm    AS prt_dept_name,
                 A.customer_id,
                 U.customer_nm
             FROM customer_dept AS A LEFT JOIN customer_dept AS B ON A.prt_id = B.customer_dept_id
                 LEFT JOIN crm_customer AS U ON A.customer_id = U.customer_id
            ) AS tb
                ON ta.customer_dept_id = tb.customer_dept_id
        WHERE contacts_id = #{contactsId};
    </select>

    <select id="queryContactsById" resultMap="contactsDetailMap">
        SELECT c.*, d.type_name
        FROM contacts c LEFT JOIN contacts_type d ON c.contacts_type_id = d.contacts_type_id
        WHERE contacts_id = #{contactsId};
    </select>

    <select id="queryFollowUpRecordsByContactsId" resultMap="followUpRecordMap">
        SELECT
            journal.create_ts,
            user_view.real_nm,
            visit_log.visit_log_id,
            visit_log.visit_type,
            visit_log.visit_result
        FROM visit_contacts
            LEFT JOIN visit_log ON visit_contacts.visit_log_id = visit_log.visit_log_id
            LEFT JOIN journal ON visit_log.journal_id = journal.journal_id
            LEFT JOIN user_view ON journal.user_id = user_view.user_id
        WHERE contacts_id = #{contactsId}
        ORDER BY (journal.create_ts) DESC;
    </select>

    <insert id="insertCustomerCompanyRelation">
        INSERT INTO company_customer
        (company_id, customer_id)
        VALUES( #{companyId}, #{customerId});
    </insert>

    <insert id="insertContactsType">
        INSERT INTO contacts_type
        (customer_id, type_name)
        VALUES( #{customerId}, #{contactsTypeName} );
    </insert>

    <select id="isContactsTypeExist" resultType="java.lang.Boolean">
        SELECT COUNT(contacts_type_id)
        FROM contacts_type
        WHERE customer_id = #{customerId} AND type_name = #{contactsTypeName};
    </select>
    
    <select id="queryOpportunityDetail"  resultMap="opportunityDetailMap">
         SELECT
            c.contacts_id,
            c.customer_dept_id,
            c.real_nm,
            ct.type_name,
            cd.department_nm,
            cu.customer_nm,
            cu.customer_id
        FROM contacts c
            LEFT JOIN customer_dept cd ON c.customer_dept_id = cd.customer_dept_id
            LEFT JOIN contacts_type ct ON ct.contacts_type_id = c.contacts_type_id
            LEFT JOIN crm_customer cu ON cd.customer_id = cu.customer_id
        WHERE
        c.customer_dept_id = (select c.customer_dept_id from contacts c where c.contacts_id =
        (select oc.contacts_id from opportunity_contacts oc where oc.sales_opportunity_id = #{opportunityId} ))
         and c.contacts_id = (select oc.contacts_id from opportunity_contacts oc where oc.sales_opportunity_id = #{opportunityId} )
    </select>

    <select id="queryFollowUpRecordsByProjectId" resultMap="followUpRecordMap">
        SELECT C.visit_log_id, C.visit_type, C.visit_result, D.create_ts, E.sales_opportunity_id AS project, U.real_nm
        FROM visit_log C LEFT JOIN journal D ON C.journal_id = D.journal_id
            LEFT JOIN sales_opportunity E ON C.sales_opportunity_id = E.sales_opportunity_id LEFT JOIN user_view U ON D.user_id = U.user_id
        WHERE C.sales_opportunity_id = #{projectId};
    </select>

</mapper>