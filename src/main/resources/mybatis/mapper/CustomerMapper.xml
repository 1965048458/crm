<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xuebei.crm.customer.CustomerMapper">

    <resultMap id="deptMap" type="com.xuebei.crm.customer.Department">
        <id property="deptId" column="customer_dept_id"/>
        <result property="deptName" column="department_nm"/>
        <result property="profile" column="profile"/>
        <result property="website" column="website"/>
        <result property="enclosureStatus" column="enclosure_status"/>
        <association property="customer" javaType="com.xuebei.crm.customer.Customer">
            <id property="customerId" column="customer_id"/>
        </association>
        <association property="parent" javaType="com.xuebei.crm.customer.Department">
            <id property="deptId" column="prt_id"/>
        </association>
        <!--<collection property="contactsList" resultMap="contactsMap"/>-->
        <!--<collection property="enclosureApplyList" javaType="com.xuebei.crm.customer.EnclosureApply">-->
            <!--<id property="enclosureApplyId" column="enclosure_apply_id"/>-->
            <!--<result property="userId" column="user_id"/>-->
            <!--<result property="statusCd" column="status_cd"/>-->
        <!--</collection>-->
    </resultMap>

    <resultMap id="enclosureApplyMap" type="com.xuebei.crm.customer.EnclosureApply">
        <id property="enclosureApplyId" column="enclosure_apply_id"/>
        <result property="userId" column="user_id"/>
        <result property="statusCd" column="status_cd"/>
    </resultMap>

    <resultMap id="contactsTypeMap" type="com.xuebei.crm.customer.ContactsType">
        <id property="contactsTypeId" column="contacts_type_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="typeName" column="type_name"/>
    </resultMap>

    <resultMap id="customerMap" type="com.xuebei.crm.customer.Customer">
        <id property="customerId" column="customer_id"/>
        <result property="customerName" column="customer_nm"/>
        <result property="customerType" column="type_cd"/>
        <result property="profile" column="profile"/>
        <result property="website" column="website"/>
    </resultMap>

    <resultMap id="contactsMap" type="com.xuebei.crm.customer.Contacts">
        <id property="contactsId" column="contacts_id"/>
        <result property="departmentId" column="customer_dept_id"/>
        <result property="realName" column="real_nm"/>
        <result property="gender" column="gender"/>
    </resultMap>

    <resultMap id="visitMap" type="com.xuebei.crm.customer.Visit">
        <id property="visitId" column="visit_log_id"/>
        <result property="userId" column="user_id"/>
        <result property="visitTime" column="create_ts"/>
        <result property="visitDept" column="des_id"/>
    </resultMap>

    <select id="isUserHasCustomer" resultType="java.lang.Boolean">
        SELECT COUNT(company_customer.customer_id)
        FROM company_user INNER JOIN company_customer ON company_user.company_id = company_customer.company_id
        WHERE company_user.user_id = #{userId} and company_customer.customer_id = #{customerId};
    </select>

    <select id="isTopDepartNameExist" resultType="java.lang.Boolean">
        SELECT COUNT(customer_id)
        FROM customer_dept
        WHERE customer_id = #{customerId} AND prt_id is null AND department_nm = #{departmentName};
    </select>

    <insert id="insertTopDepartment" parameterType="com.xuebei.crm.customer.Department">
        INSERT INTO customer_dept (
            customer_dept_id,
            prt_id,
            department_nm,
            customer_id,
            enclosure_status,
            website,
            PROFILE
        )
        VALUES
            (
                #{deptId},
                #{parent.deptId},
                #{deptName},
                #{customer.customerId},
                #{enclosureStatus},
                #{website},
                #{profile}
            );
    </insert>

    <insert id="newSchool" parameterType="java.lang.String">
        INSERT INTO crm_customer (
        customer_id,
        customer_nm,
        type_cd,
        profile,
        website,
        creator_id,
        create_ts,
        updater_id,
        update_ts
        )
        VALUES
        (
        #{customer_id},
        #{name},
        #{schoolType},
        #{profile},
        #{website},
        #{creator_id},
        NOW(),
        #{updater_id},
        NOW()
        );
    </insert>

    <select id="queryCustomerInfo" resultMap="customerMap">
        SELECT * FROM crm_customer WHERE
            customer_nm LIKE CONCAT('%', #{searchWord}, '%')
    </select>


    <select id="queryDepartmentById" resultMap="deptMap">
        SELECT *
        FROM customer_dept
        WHERE customer_dept_id = #{deptId};
    </select>

    <insert id="insertContacts" parameterType="com.xuebei.crm.customer.Contacts">
        INSERT INTO `crmdb`.`contacts` (
			`contacts_id`,
			`customer_dept_id`,
			`real_nm`,
			`gender`,
			`phone`,
			`wechat`,
			`tel`,
			`QQ`,
			`email`,
			`office_address`,
			`profile`,
			`special_relationship`,
			`contacts_type_id`
		)
		VALUES
			(
				#{contactsId},
				#{department.deptId},
				#{realName},
				#{gender},
				#{phone},
				#{wechat},
				#{tel},
				#{QQ},
				#{email},
				#{officeAddr},
				#{profile},
				#{specialRelationship},
				#{contactsType.contactsTypeId}
			);
    </insert>

    <select id="queryContactsTypeById" resultMap="contactsTypeMap">
        SELECT *
        FROM contacts_type
        WHERE contacts_type_id = #{contactsTypeId};
    </select>

    <select id="queryDepartment" resultMap="deptMap">
        SELECT cd.* FROM customer_dept cd
        LEFT JOIN contacts c ON c.customer_dept_id = cd.customer_dept_id
        WHERE cd.customer_id = #{customerId}
    </select>

    <select id="queryContacts" resultMap="contactsMap">
        SELECT c.* FROM contacts c
        INNER JOIN customer_dept cd ON c.customer_dept_id = cd.customer_dept_id
        WHERE cd.customer_id = #{customerId}
    </select>

    <insert id="insertEnclosureApply" parameterType="com.xuebei.crm.customer.EnclosureApply">
        INSERT INTO enclosure_apply(
            apply_ts,
            customer_dept_id,
            user_id,
            apply_reason,
            apply_start_ts,
            apply_end_ts,
            status_cd,
            updater_id,
            update_ts
        )
        VALUES (
                NOW(),
                #{deptId},
                #{userId},
                #{reasons},
                NOW(),
                date_add(NOW(), INTERVAL 3 MONTH),
                'APPLYING',
                #{userId},
                NOW()
        );

    </insert>

    <select id="queryEnclosureApply" resultMap="enclosureApplyMap">
        SELECT ea.user_id,ea.status_cd FROM enclosure_apply ea
        WHERE ea.customer_dept_id = #{deptId}
    </select>

    <select id="queryNewEnclosureApply" resultMap="enclosureApplyMap">
        SELECT *
        FROM enclosure_apply as t
        WHERE t.customer_dept_id = #{deptId} AND t.status_cd = 'PERMITTED'
        ORDER BY t.apply_start_ts DESC
        LIMIT 1
        ;
    </select>

    <select id="queryMyVisit" resultMap="visitMap">
        SELECT r1.create_ts,r1.user_id,r2.des_id,r1.visit_log_id
        FROM
            (
                SELECT A.contacts_id, B.create_ts, B.user_id,A.visit_log_id
                FROM
                    (SELECT visit_contacts.contacts_id, visit_log.journal_id,visit_log.visit_log_id
                     FROM visit_contacts LEFT JOIN visit_log ON
                     visit_contacts.visit_log_id = visit_log.visit_log_id)
                    AS A LEFT JOIN journal AS B ON A.journal_id = B.journal_id
            ) AS r1
            LEFT JOIN
            (
                SELECT contacts.contacts_id, dept_dest_table.des_id
                FROM contacts LEFT JOIN
                    ((SELECT customer_dept_id, prt_id AS des_id
                      FROM customer_dept
                      WHERE prt_id is not null)
                     UNION
                     (SELECT customer_dept_id, customer_dept_id AS des_id
                      from customer_dept
                      WHERE prt_id is null))

                        AS dept_dest_table
                        ON contacts.customer_dept_id = dept_dest_table.customer_dept_id
            ) AS r2 ON r1.contacts_id = r2.contacts_id
        WHERE r2.des_id = #{deptId}
        AND r1.create_ts &gt;= #{startTime}
        AND r1.user_id = #{userId}
        ORDER BY r1.create_ts DESC
        ;
    </select>

    <select id="queryElseVisit" resultMap="visitMap">
        SELECT r1.create_ts,r1.user_id,r2.des_id,r1.visit_log_id
        FROM
        (
        SELECT A.contacts_id, B.create_ts, B.user_id,A.visit_log_id
        FROM
        (SELECT visit_contacts.contacts_id, visit_log.journal_id,visit_log.visit_log_id
        FROM visit_contacts LEFT JOIN visit_log ON
        visit_contacts.visit_log_id = visit_log.visit_log_id)
        AS A LEFT JOIN journal AS B ON A.journal_id = B.journal_id
        ) AS r1
        LEFT JOIN
        (
        SELECT contacts.contacts_id, dept_dest_table.des_id
        FROM contacts LEFT JOIN
        ((SELECT customer_dept_id, prt_id AS des_id
        FROM customer_dept
        WHERE prt_id is not null)
        UNION
        (SELECT customer_dept_id, customer_dept_id AS des_id
        from customer_dept
        WHERE prt_id is null))

        AS dept_dest_table
        ON contacts.customer_dept_id = dept_dest_table.customer_dept_id
        ) AS r2 ON r1.contacts_id = r2.contacts_id
        WHERE r2.des_id = #{deptId}
        AND r1.create_ts &gt;= #{startTime}
        AND r1.user_id != #{userId}
        ORDER BY r1.create_ts DESC
        LIMIT 1
        ;
    </select>

    <select id="searchSchool" parameterType="java.lang.String"  resultType="java.lang.String">
        select c.customer_nm from crm_customer c
        WHERE c.customer_nm LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="queryContactsTypes" resultMap="contactsTypeMap">
        SELECT contacts_type_id, type_name
        FROM contacts_type
        WHERE customer_id = #{customerId};
    </select>

</mapper>